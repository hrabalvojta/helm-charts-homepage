replicaCount: 1

image:
  registry: ghcr.io
  repository: m0nsterrr/hyperglass
  pullPolicy: IfNotPresent
  # -- Overrides the image tag whose default is the chart appVersion.
  tag: ""
  sha: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# -- Deployment strategy
strategy:
  type: Recreate

# -- Environment variables to add to the as212510.net pods
extraEnv: []
# -- Environment variables from secrets or configmaps to add to the as212510.net pods
extraEnvFrom: []

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Automatically mount a ServiceAccount's API credentials?
  automount: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # -- If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  fsGroup: 1000
  fsGroupChangePolicy: OnRootMismatch

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  privileged: false
  runAsUser: 1000
  runAsGroup: 1000
  seccompProfile:
    type: RuntimeDefault

valkey:
  # -- enable the Bitnami Valkey chart. Refer to https://github.com/bitnami/charts/blob/main/bitnami/valkey/ for possible values.
  enabled: true
  architecture: standalone
  primary:
    persistence:
      size: 1Gi
  auth:
    enabled: false
    existingSecret: ""
    existingSecretPasswordKey: ""
  metrics:
    enabled: false
    serviceMonitor:
      enabled: false
    prometheusRule:
      enabled: false

service:
  type: ClusterIP
  port: 80

# -- Creating PVC to store UI build artifact
build:
  persistence:
    enabled: true
    # -- Size of persistent disk
    size: 200Mi
    # -- Annotations for PVCs
    annotations: {}
    # -- Access modes of persistent disk
    accessModes:
      - ReadWriteOnce
    # -- Config name
    name: ""
    # -- Name of the permanent volume to reference in the claim.
    # Can be used to bind to existing volumes.
    volumeName: ""

ingress:
  enabled: false
  ingressClassName: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# -- Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
